/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ticketbooking;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author gurpreet9001
 */
public class movielist extends javax.swing.JInternalFrame implements myvariables {

    /**
     * Creates new form movielist
     */
    public movielist() {
        initComponents();
        
         try
 {
 Connection myconnection;
 myconnection=DriverManager.getConnection(PATH+PLACE, USERNAME, PASS);
 
 try
 {
    String myquery="select distinct(city) from theaterlist";
    PreparedStatement mystatement=myconnection.prepareStatement(myquery);
    ResultSet myresult=mystatement.executeQuery();
    
    if(myresult.next()){
    do{
    citybox.addItem(myresult.getString("city"));
    }while(myresult.next());
    }
            
            
   
    citybox.setSelectedIndex(0);
   
 
 }
 catch(Exception e)
 {
    JOptionPane.showMessageDialog(rootPane, "Error in Query 1 " + e.getMessage());
 }
 finally
 {
    myconnection.close();
 }
 }
 catch(Exception e)
 {
 JOptionPane.showMessageDialog(rootPane, "Error in Connection " + e.getMessage());
 }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        city = new javax.swing.JPanel();
        theater = new javax.swing.JLabel();
        movie = new javax.swing.JLabel();
        theaterbox = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        moviebox = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        citybox = new javax.swing.JComboBox<>();
        Price = new javax.swing.JLabel();
        pricebox = new javax.swing.JTextField();
        Price1 = new javax.swing.JLabel();
        timebox = new javax.swing.JTextField();
        Price2 = new javax.swing.JLabel();
        datebox = new com.toedter.calendar.JDateChooser();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Add New Movies");

        theater.setText("Theater");

        movie.setText("Movie Name");

        theaterbox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose theater" }));
        theaterbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                theaterboxActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ticketbooking/add.png"))); // NOI18N
        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        moviebox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                movieboxActionPerformed(evt);
            }
        });

        jLabel6.setText("City");

        citybox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose City" }));
        citybox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cityboxActionPerformed(evt);
            }
        });

        Price.setText("Price");

        pricebox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceboxActionPerformed(evt);
            }
        });

        Price1.setText("Date");

        timebox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timeboxActionPerformed(evt);
            }
        });

        Price2.setText("Show Timing");

        javax.swing.GroupLayout cityLayout = new javax.swing.GroupLayout(city);
        city.setLayout(cityLayout);
        cityLayout.setHorizontalGroup(
            cityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cityLayout.createSequentialGroup()
                .addGroup(cityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(cityLayout.createSequentialGroup()
                        .addGap(168, 168, 168)
                        .addGroup(cityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(theater)
                            .addComponent(movie)
                            .addComponent(jLabel6)
                            .addComponent(Price)
                            .addComponent(Price1)
                            .addComponent(Price2))
                        .addGap(134, 134, 134)
                        .addGroup(cityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(theaterbox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(moviebox)
                            .addComponent(citybox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pricebox)
                            .addComponent(timebox)
                            .addComponent(datebox, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(cityLayout.createSequentialGroup()
                        .addGap(275, 275, 275)
                        .addComponent(jButton1)))
                .addContainerGap(188, Short.MAX_VALUE))
        );
        cityLayout.setVerticalGroup(
            cityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cityLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(cityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(citybox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(cityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(theater)
                    .addComponent(theaterbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(cityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(movie)
                    .addComponent(moviebox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(cityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Price)
                    .addComponent(pricebox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(cityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Price1)
                    .addComponent(datebox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(cityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Price2)
                    .addComponent(timebox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(35, 35, 35))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(city, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(city, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void theaterboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_theaterboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_theaterboxActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try
        {
            Connection myconnection;

            myconnection=DriverManager.getConnection(PATH+PLACE, USERNAME, PASS);

            try
            {
                String a="insert into movies values(?,?,?,?,?,?)";
                PreparedStatement mystatement=myconnection.prepareStatement(a);
                mystatement.setString(1, theaterbox.getSelectedItem().toString());
                mystatement.setString(2, moviebox.getText());
                mystatement.setString(3, citybox.getSelectedItem().toString());
                mystatement.setString(4, pricebox.getText());
                 SimpleDateFormat myformat = new SimpleDateFormat("yyyy-MM-dd");
                String date = myformat.format(datebox.getDate());
                mystatement.setString(5, date);
                mystatement.setString(6, timebox.getText());
                
                if(mystatement.executeUpdate()>0)
                {
                    JOptionPane.showMessageDialog(rootPane, "Saved Successfully");
                    citybox.setSelectedIndex(0);
                    theaterbox.setSelectedIndex(0);
                    pricebox.setText("");
                    moviebox.setText("");
                }

            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane, "Error in Query " + e.getMessage());
            }
            finally
            {
                myconnection.close();
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(rootPane, "Error in Connection " + e.getMessage());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void movieboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_movieboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_movieboxActionPerformed

    private void cityboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cityboxActionPerformed
                             try
 {
 Connection myconnection;
 myconnection=DriverManager.getConnection(PATH+PLACE, USERNAME, PASS);
 
 try
 {
    String myquery="select distinct(name) from theaterlist where city=?";
    PreparedStatement mystatement=myconnection.prepareStatement(myquery);
    mystatement.setString(1,citybox.getSelectedItem().toString());
    ResultSet myresult=mystatement.executeQuery();
    
    
    
    
    
    if(myresult.next()){
        theaterbox.removeAllItems();
        theaterbox.addItem("Choose theater now");
    do{
    theaterbox.addItem(myresult.getString("name"));
    }while(myresult.next());
    
    }
           
    theaterbox.setSelectedIndex(0);
    
 
 }
 catch(Exception e)
 {
    JOptionPane.showMessageDialog(rootPane, "Error in Query 2 " + e.getMessage());
 }
 finally
 {
    myconnection.close();
 }
 }
 catch(Exception e)
 {
 JOptionPane.showMessageDialog(rootPane, "Error in Connection " + e.getMessage());
 }
    }//GEN-LAST:event_cityboxActionPerformed

    private void priceboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_priceboxActionPerformed

    private void timeboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timeboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_timeboxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Price;
    private javax.swing.JLabel Price1;
    private javax.swing.JLabel Price2;
    private javax.swing.JPanel city;
    private javax.swing.JComboBox<String> citybox;
    private com.toedter.calendar.JDateChooser datebox;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel movie;
    private javax.swing.JTextField moviebox;
    private javax.swing.JTextField pricebox;
    private javax.swing.JLabel theater;
    private javax.swing.JComboBox<String> theaterbox;
    private javax.swing.JTextField timebox;
    // End of variables declaration//GEN-END:variables
}
