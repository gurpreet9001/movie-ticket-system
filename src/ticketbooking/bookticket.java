/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ticketbooking;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import static java.awt.SystemColor.desktop;
import java.awt.print.PageFormat;
import java.awt.print.Printable;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.sql.*;
import java.text.SimpleDateFormat;
import javax.swing.JButton;
import javax.swing.JDesktopPane;
import javax.swing.JOptionPane;


public class bookticket extends javax.swing.JInternalFrame implements myvariables ,Printable {

    /**
     * Creates new form bookticket
     */
    public bookticket() {
        initComponents();
        
        java.util.Date obj=new java.util.Date();
        SimpleDateFormat myformat=new SimpleDateFormat("yyyy-MM-dd");
        datebox.setText(myformat.format(obj));
        
         try
 {
 Connection myconnection;
 myconnection=DriverManager.getConnection(PATH+PLACE, USERNAME, PASS);
 
 try
 {
    String myquery="select distinct city from theaterlist";
    PreparedStatement mystatement=myconnection.prepareStatement(myquery);
    ResultSet myresult=mystatement.executeQuery();
    
    if(myresult.next()){
    do{
    citybox.addItem(myresult.getString("City"));
    }while(myresult.next());
    }
            
            
   
    citybox.setSelectedIndex(0);
   
 
 }
 catch(Exception e)
 {
    JOptionPane.showMessageDialog(rootPane, "Error in Query 1 " + e.getMessage());
 }
 finally
 {
    myconnection.close();
 }
 }
 catch(Exception e)
 {
 JOptionPane.showMessageDialog(rootPane, "Error in Connection " + e.getMessage());
 }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        city = new javax.swing.JLabel();
        theater = new javax.swing.JLabel();
        movie = new javax.swing.JLabel();
        citybox = new javax.swing.JComboBox<>();
        theaterbox = new javax.swing.JComboBox<>();
        moviebox = new javax.swing.JComboBox<>();
        userID = new javax.swing.JLabel();
        useridbox = new javax.swing.JTextField();
        tickets1 = new javax.swing.JLabel();
        price = new javax.swing.JLabel();
        pricebox = new javax.swing.JLabel();
        date = new javax.swing.JLabel();
        total = new javax.swing.JLabel();
        totalbox = new javax.swing.JLabel();
        ticketbox = new javax.swing.JTextField();
        datebox = new javax.swing.JLabel();
        date1 = new javax.swing.JLabel();
        date2 = new javax.swing.JLabel();
        timebox = new javax.swing.JLabel();
        showdatebox = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Book Ticket");

        city.setText("City");

        theater.setText("Theater");

        movie.setText("Movie");

        citybox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose city" }));
        citybox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cityboxActionPerformed(evt);
            }
        });

        theaterbox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose theater" }));
        theaterbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                theaterboxActionPerformed(evt);
            }
        });

        moviebox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose movie" }));
        moviebox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                movieboxActionPerformed(evt);
            }
        });

        userID.setText("Unique UserID");

        tickets1.setText("No. of Tickets");

        price.setText("Price");

        pricebox.setText("...");

        date.setText("Booking Date");

        total.setText("Total");

        totalbox.setText("...");

        ticketbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ticketboxActionPerformed(evt);
            }
        });
        ticketbox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ticketboxKeyTyped(evt);
            }
        });

        datebox.setText("...");

        date1.setText("Show Timing");

        date2.setText("Show Date");

        timebox.setText("...");

        showdatebox.setText("...");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(city)
                            .addComponent(movie)
                            .addComponent(theater)
                            .addComponent(userID)
                            .addComponent(tickets1)
                            .addComponent(price)
                            .addComponent(date)
                            .addComponent(total))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 131, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(theaterbox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(moviebox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(citybox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(useridbox)
                                .addComponent(totalbox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ticketbox, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(datebox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(pricebox, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(date2)
                            .addComponent(date1))
                        .addGap(137, 137, 137)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(timebox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(showdatebox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(price)
                        .addGap(30, 30, 30)
                        .addComponent(userID)
                        .addGap(25, 25, 25)
                        .addComponent(tickets1)
                        .addGap(28, 28, 28)
                        .addComponent(total)
                        .addGap(29, 29, 29)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(date)
                            .addComponent(datebox))
                        .addGap(28, 28, 28))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addGap(162, 162, 162)
                                    .addComponent(useridbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(129, 129, 129))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(citybox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(theaterbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(theater))
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(moviebox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(movie))
                                    .addGap(18, 18, 18)
                                    .addComponent(pricebox, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(69, 69, 69)
                                    .addComponent(ticketbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(25, 25, 25)
                                    .addComponent(totalbox)))
                            .addComponent(city))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(date1)
                    .addComponent(timebox))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(showdatebox)
                    .addComponent(date2))
                .addGap(23, 23, 23))
        );

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ticketbooking/ticket (1).png"))); // NOI18N
        jButton1.setText("Book");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setText("Get Total");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(211, 211, 211)
                        .addComponent(jButton1)))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(29, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(242, 242, 242)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jButton1)
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void theaterboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_theaterboxActionPerformed
                     try
 {
 Connection myconnection;
 myconnection=DriverManager.getConnection(PATH+PLACE, USERNAME, PASS);
 
 try
 {
    String myquery="select movie from movies where theatername=?";
    PreparedStatement mystatement=myconnection.prepareStatement(myquery);
    mystatement.setString(1,theaterbox.getSelectedItem().toString());
    ResultSet myresult=mystatement.executeQuery();
    
    
    
    
    
    if(myresult.next()){
        moviebox.removeAllItems();
        moviebox.addItem("Choose movies now");
    do{
    moviebox.addItem(myresult.getString("movie"));
    }while(myresult.next());
    
    }
           
    moviebox.setSelectedIndex(0);
    
 
 }
 catch(Exception e)
 {
    //JOptionPane.showMessageDialog(rootPane, "Error in Query 2 " + e.getMessage());
 }
 finally
 {
    myconnection.close();
 }
 }
 catch(Exception e)
 {
 JOptionPane.showMessageDialog(rootPane, "Error in Connection " + e.getMessage());
 }
    }//GEN-LAST:event_theaterboxActionPerformed

    private void cityboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cityboxActionPerformed
                      try
 {
 Connection myconnection;
 myconnection=DriverManager.getConnection(PATH+PLACE, USERNAME, PASS);
 
 try
 {
    String myquery="select distinct(theatername) from movies where city=?";
    PreparedStatement mystatement=myconnection.prepareStatement(myquery);
    mystatement.setString(1,citybox.getSelectedItem().toString());
    ResultSet myresult=mystatement.executeQuery();
    
    
    
    
    
    if(myresult.next()){
        theaterbox.removeAllItems();
        theaterbox.addItem("Choose theater now");
    do{
    theaterbox.addItem(myresult.getString("theatername"));
    }while(myresult.next());
    
    }
           
    theaterbox.setSelectedIndex(0);
    
 
 }
 catch(Exception e)
 {
    JOptionPane.showMessageDialog(rootPane, "Error in Query 2 " + e.getMessage());
 }
 finally
 {
    myconnection.close();
 }
 }
 catch(Exception e)
 {
 JOptionPane.showMessageDialog(rootPane, "Error in Connection " + e.getMessage());
 }
    }//GEN-LAST:event_cityboxActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
  try
        {
            Connection myconnection;

            myconnection=DriverManager.getConnection(PATH+PLACE, USERNAME, PASS);

            try
            {
                String a="insert into ticket_booked values(?,?,?,?,?,?,?,?,?,?)";
                PreparedStatement mystatement=myconnection.prepareStatement(a);
                mystatement.setString(2, theaterbox.getSelectedItem().toString());
                mystatement.setString(1, citybox.getSelectedItem().toString());
                mystatement.setString(3, moviebox.getSelectedItem().toString());
                mystatement.setString(4, useridbox.getText());
                mystatement.setString(5, ticketbox.getText());
                mystatement.setString(6, datebox.getText());
                mystatement.setString(7, pricebox.getText());
                mystatement.setString(8, totalbox.getText());
                mystatement.setString(9, showdatebox.getText());
                mystatement.setString(10, timebox.getText());
                
                
                if(mystatement.executeUpdate()>0)
                {
                      
                    print_ticket.userid=useridbox.getText();
                    print_ticket obj=new print_ticket();
                    parent.jDesktopPane1.add(obj);
                    obj.setVisible(true);
    
                    useridbox.setText("");
                    moviebox.setSelectedIndex(0);
                    theaterbox.setSelectedIndex(0);
                    citybox.setSelectedIndex(0);
                    moviebox.setSelectedIndex(0);
                    pricebox.setText("");
                    totalbox.setText("");
                    showdatebox.setText("");
                    timebox.setText("");
                }

            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane, "Error in Query " + e.getMessage());
            }
            finally
            {
                myconnection.close();
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(rootPane, "Error in Connection " + e.getMessage());
        }  
 
   
    }//GEN-LAST:event_jButton1ActionPerformed

    private void movieboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_movieboxActionPerformed
                     try
 {
 Connection myconnection;
 myconnection=DriverManager.getConnection(PATH+PLACE, USERNAME, PASS);
 
 try
 {
    String myquery="select * from movies where movie=?";
    PreparedStatement mystatement=myconnection.prepareStatement(myquery);
    mystatement.setString(1,moviebox.getSelectedItem().toString());
    ResultSet myresult=mystatement.executeQuery();
    
    
    
    
    
    if(myresult.next()){
       pricebox.setText(myresult.getString("price"));
       timebox.setText(myresult.getString("time"));
       showdatebox.setText(myresult.getString("Date"));
    }
       
 
 }
 catch(Exception e)
 {
    //JOptionPane.showMessageDialog(rootPane, "Error in Query 2 " + e.getMessage());
 }
 finally
 {
    myconnection.close();
 }
 }
 catch(Exception e)
 {
 JOptionPane.showMessageDialog(rootPane, "Error in Connection " + e.getMessage());
 } 
    }//GEN-LAST:event_movieboxActionPerformed

    private void ticketboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ticketboxActionPerformed
        
    }//GEN-LAST:event_ticketboxActionPerformed

    private void ticketboxKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ticketboxKeyTyped
      
    }//GEN-LAST:event_ticketboxKeyTyped

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
         try
        {
            Connection myconnection;
            myconnection=DriverManager.getConnection(PATH+PLACE, USERNAME, PASS);

            try
            {
                String myquery="select price from movies where movie=?";
                PreparedStatement mystatement=myconnection.prepareStatement(myquery);
                mystatement.setString(1,moviebox.getSelectedItem().toString());
                ResultSet myresult=mystatement.executeQuery();

                if(myresult.next()){

                    String myprice=myresult.getString("price");
                    String myticket=(String) ticketbox.getText();
                    int mytotal=Integer.parseInt(myprice)*Integer.parseInt(myticket);
                    totalbox.setText(String.valueOf(mytotal));
                }

            }
            catch(Exception e)
            {
                //JOptionPane.showMessageDialog(rootPane, "Error in Query 2 " + e.getMessage());
            }
            finally
            {
                myconnection.close();
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(rootPane, "Error in Connection " + e.getMessage());
        }

        int myticket=Integer.parseInt(ticketbox.getText());
        int myprice=Integer.parseInt(pricebox.getText());
        int mytotal=myticket*myprice;
        totalbox.setText(String.valueOf(mytotal));

    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel city;
    private javax.swing.JComboBox<String> citybox;
    private javax.swing.JLabel date;
    private javax.swing.JLabel date1;
    private javax.swing.JLabel date2;
    private javax.swing.JLabel datebox;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel movie;
    private javax.swing.JComboBox<String> moviebox;
    private javax.swing.JLabel price;
    private javax.swing.JLabel pricebox;
    private javax.swing.JLabel showdatebox;
    private javax.swing.JLabel theater;
    private javax.swing.JComboBox<String> theaterbox;
    private javax.swing.JTextField ticketbox;
    private javax.swing.JLabel tickets1;
    private javax.swing.JLabel timebox;
    private javax.swing.JLabel total;
    private javax.swing.JLabel totalbox;
    private javax.swing.JLabel userID;
    private javax.swing.JTextField useridbox;
    // End of variables declaration//GEN-END:variables

    @Override
   public int print(Graphics graphics, PageFormat pageFormat, int pageIndex) throws PrinterException {
if (pageIndex > 0) { /* We have only one page, and 'page' is zero-based */
return NO_SUCH_PAGE;
}

// get the bounds of the component
Dimension dim = jPanel1.getSize();
double cHeight = dim.getHeight();
double cWidth = dim.getWidth();

// get the bounds of the printable area
double pHeight = pageFormat.getImageableHeight();
double pWidth = pageFormat.getImageableWidth();

double pXStart = pageFormat.getImageableX();
double pYStart = pageFormat.getImageableY();

double xRatio = pWidth / cWidth;
double yRatio = pHeight / cHeight;


Graphics2D g2 = (Graphics2D) graphics;
g2.translate(pXStart, pYStart);
g2.scale(xRatio, yRatio);
jPanel1.paint(g2);

return Printable.PAGE_EXISTS;
}
}
